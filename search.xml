<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>CRYPTO</title>
      <link href="2021/04/17/CRYPTO/"/>
      <url>2021/04/17/CRYPTO/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>ctf做题集</title>
      <link href="2021/04/14/ctf%E5%81%9A%E9%A2%98%E9%9B%86/"/>
      <url>2021/04/14/ctf%E5%81%9A%E9%A2%98%E9%9B%86/</url>
      
        <content type="html"><![CDATA[<h1 id="xctf"><a href="#xctf" class="headerlink" title="xctf"></a>xctf</h1><h2 id="1：Crtpto"><a href="#1：Crtpto" class="headerlink" title="1：Crtpto"></a>1：Crtpto</h2><h3 id="第一题：base64"><a href="#第一题：base64" class="headerlink" title="第一题：base64"></a>第一题：base64</h3><p>打开题目 下载附件<br>下载完附件就打开<br><img src="/uploads/1.jpg"><br>看标题：base64<br>放进解码工具里<br>（我用的一个解码网站<br><a href="http://ctf.ssleye.com/?tdsourcetag=s_pcqq_aiomsg%EF%BC%89">http://ctf.ssleye.com/?tdsourcetag=s_pcqq_aiomsg）</a><br><img src="https://note.youdao.com/yws/public/resource/7ef66b8168e74b97ee5e6f9defe01525/xmlnote/7DDECF0D30B14244B909101F5DB4E2BC/156"></p><h3 id="ok-解决"><a href="#ok-解决" class="headerlink" title="ok 解决"></a>ok 解决</h3><h3 id="第二题：Caesar"><a href="#第二题：Caesar" class="headerlink" title="第二题：Caesar"></a>第二题：Caesar</h3><p>题目叫凯撒，很经典的加密方式<br>用工具就行了<br><img src="https://note.youdao.com/yws/public/resource/7ef66b8168e74b97ee5e6f9defe01525/xmlnote/F24CD4B336AC48BB81835441C97DB1AA/158"><br>不要问位移多少，问就是泪</p><h4 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;ctype.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">char</span> <span class="title">Caesar</span><span class="params">(<span class="keyword">char</span> c,<span class="keyword">int</span> n)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc,<span class="keyword">char</span> *argv[])</span><span class="comment">//接入命令行参数，其中命令行参数1为密文</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i,x;</span><br><span class="line"><span class="keyword">for</span>(x = <span class="number">-128</span>;x&lt;<span class="number">128</span>;x++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%5d :&quot;</span>,x);</span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>;i&lt;<span class="built_in">strlen</span>(argv[<span class="number">1</span>]);i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">putchar</span>(Caesar(argv[<span class="number">1</span>][i],x));</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">putchar</span>(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">char</span> <span class="title">Caesar</span><span class="params">(<span class="keyword">char</span> c,<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">isalpha</span>(c))</span><br><span class="line"><span class="keyword">return</span> (c - <span class="number">65</span> - n) % <span class="number">26</span> + <span class="number">65</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">return</span> c;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在输出内查找cyberpeace，转化成小写得到flag</p><h3 id="ok"><a href="#ok" class="headerlink" title="ok"></a>ok</h3><h3 id="第三题：Morse"><a href="#第三题：Morse" class="headerlink" title="第三题：Morse"></a>第三题：Morse</h3><p>莫尔斯 也很经典<br>一样的带入工具<br>就不放图了</p><h4 id="方法二-1"><a href="#方法二-1" class="headerlink" title="方法二"></a>方法二</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc,<span class="keyword">char</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> x;</span><br><span class="line"><span class="keyword">for</span>(x = <span class="number">0</span>;x &lt; <span class="built_in">strlen</span>(argv[<span class="number">1</span>]);x++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(argv[<span class="number">1</span>][x] == <span class="string">&#x27;0&#x27;</span>)</span><br><span class="line"><span class="built_in">putchar</span>(<span class="string">&#x27;.&#x27;</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(argv[<span class="number">1</span>][x] == <span class="string">&#x27;1&#x27;</span>)</span><br><span class="line"><span class="built_in">putchar</span>(<span class="string">&#x27;-&#x27;</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">putchar</span>(<span class="string">&#x27;/&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\nor\n&quot;</span>);</span><br><span class="line"><span class="keyword">for</span>(x = <span class="number">0</span>;x &lt; <span class="built_in">strlen</span>(argv[<span class="number">1</span>]);x++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(argv[<span class="number">1</span>][x] == <span class="string">&#x27;0&#x27;</span>)</span><br><span class="line"><span class="built_in">putchar</span>(<span class="string">&#x27;-&#x27;</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(argv[<span class="number">1</span>][x] == <span class="string">&#x27;1&#x27;</span>)</span><br><span class="line"><span class="built_in">putchar</span>(<span class="string">&#x27;.&#x27;</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">putchar</span>(<span class="string">&#x27;/&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出结果:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">--&#x2F;---&#x2F;.-.&#x2F;...&#x2F;.&#x2F;-.-.&#x2F;---&#x2F;-..&#x2F;.&#x2F;..&#x2F;...&#x2F;...&#x2F;---&#x2F;..&#x2F;-.&#x2F;-&#x2F;.&#x2F;.-.&#x2F;.&#x2F;...&#x2F;-&#x2F;..&#x2F;-.&#x2F;--.</span><br><span class="line">or</span><br><span class="line">..&#x2F;...&#x2F;-.-&#x2F;---&#x2F;-&#x2F;.-.-&#x2F;...&#x2F;.--&#x2F;-&#x2F;--&#x2F;---&#x2F;---&#x2F;...&#x2F;--&#x2F;.-&#x2F;.&#x2F;-&#x2F;-.-&#x2F;-&#x2F;---&#x2F;.&#x2F;--&#x2F;.-&#x2F;..-</span><br></pre></td></tr></table></figure><p>使用在线莫尔斯解密，得到flag</p><h3 id="第四题：幂数加密"><a href="#第四题：幂数加密" class="headerlink" title="第四题：幂数加密"></a>第四题：幂数加密</h3><p>下载附件，拿到密文</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">8842101220480224404014224202480122</span><br></pre></td></tr></table></figure><p>以0为间隔，每一单元的各位数字之和对应着26个字母，即:1-26 -&gt; A-Z</p><p>编写解密程序</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc,<span class="keyword">char</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> sum,i;</span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>,sum = <span class="number">0</span>;i &lt; <span class="built_in">strlen</span>(argv[<span class="number">1</span>]);i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(argv[<span class="number">1</span>][i] == <span class="string">&#x27;0&#x27;</span> || argv[<span class="number">1</span>][i] == EOF)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">putchar</span>((<span class="keyword">char</span>)(sum + <span class="string">&#x27;A&#x27;</span> - <span class="number">1</span>));</span><br><span class="line">sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line">sum += (argv[<span class="number">1</span>][i] - <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行得到flag</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">WELLDON</span><br></pre></td></tr></table></figure><h3 id="第五题：Railfence"><a href="#第五题：Railfence" class="headerlink" title="第五题：Railfence"></a>第五题：Railfence</h3><p>介绍一看，欸 关键字 “栅栏” “5”<br>得 瞬间思路就来了，用加密工具<br>直接得答案，但是有些栅栏解密工具解出来的还是错的，所以要重新找工具<br>链接：<a href="http://www.atoolbox.net/Tool.php?Id=777">http://www.atoolbox.net/Tool.php?Id=777</a></p><h4 id="方法二-2"><a href="#方法二-2" class="headerlink" title="方法二"></a>方法二</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">De_Railfence</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> * str,<span class="keyword">int</span> psd)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc,<span class="keyword">char</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">1</span>;i &lt; <span class="built_in">strlen</span>(argv[<span class="number">1</span>]);i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%2d: &quot;</span>,i);</span><br><span class="line">De_Railfence(argv[<span class="number">1</span>],i);</span><br><span class="line"><span class="built_in">putchar</span>(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">De_Railfence</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> * str,<span class="keyword">int</span> psd)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i,x,y,sum,a,high,width;</span><br><span class="line"></span><br><span class="line">sum = <span class="built_in">strlen</span>(str); <span class="comment">//密文总字数</span></span><br><span class="line">a = sum % psd; <span class="comment">// 多出的字母</span></span><br><span class="line">width = sum / psd + a; <span class="comment">//列数</span></span><br><span class="line">high = psd; <span class="comment">//行数</span></span><br><span class="line"><span class="keyword">char</span> * table = (<span class="keyword">char</span> *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">char</span>) * width * high);<span class="comment">//申请一个&quot;x行y列&quot;的一维数组</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>,y = <span class="number">0</span>;y &lt; high;y++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(x = <span class="number">0</span>;x &lt; width - (a &gt; <span class="number">0</span> ? <span class="number">0</span> : <span class="number">1</span>);x++)</span><br><span class="line">&#123;</span><br><span class="line">table[y * width + x] = str[i++];</span><br><span class="line">&#125;</span><br><span class="line">a--;</span><br><span class="line">&#125;</span><br><span class="line">a = sum % psd;</span><br><span class="line"><span class="keyword">for</span>(x = <span class="number">0</span>;x &lt; width;x++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(y = <span class="number">0</span>;y &lt; high &amp;&amp; (x == width - <span class="number">1</span> ? (y &lt; a) : <span class="number">1</span>);y++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">putchar</span>(table[y * width + x]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">free</span>(table);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>但是经运行后，找不到答案格式的字符串，所以另外查了一下，这是栅栏加密的变种:WWW型</p><p>于是再编写程序</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> number;</span><br><span class="line"><span class="keyword">char</span> ch;</span><br><span class="line">&#125;ccc;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">De_code</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span>* str, <span class="keyword">int</span> key)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> * <span class="title">equip</span><span class="params">(<span class="keyword">int</span> sum, <span class="keyword">int</span> key)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>* argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">2</span>;i &lt; <span class="built_in">strlen</span>(argv[<span class="number">1</span>]);i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%2d :&quot;</span>,i);</span><br><span class="line">De_code(argv[<span class="number">1</span>],i);</span><br><span class="line"><span class="built_in">putchar</span>(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">De_code</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span>* str, <span class="keyword">int</span> key)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> x, y, sum, i;</span><br><span class="line">sum = <span class="built_in">strlen</span>(str);</span><br><span class="line"><span class="keyword">int</span> * num = equip(sum,key);<span class="comment">//在字符串str中每个字符在WWW顺序中的编号 构成的数组 复制给num</span></span><br><span class="line">ccc* dict = (ccc*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(ccc) * sum);<span class="comment">//建立字典</span></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; sum; i++)<span class="comment">//写入字典</span></span><br><span class="line">&#123;</span><br><span class="line">dict[i].number = num[i];</span><br><span class="line">dict[i].ch = str[i];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (x = <span class="number">0</span>; x &lt; sum - <span class="number">1</span>; x++)<span class="comment">//字典排序</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (y = x + <span class="number">1</span>; y &lt; sum; y++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (dict[x].number &gt; dict[y].number)</span><br><span class="line">&#123;</span><br><span class="line">ccc temp = dict[x];</span><br><span class="line">dict[x] = dict[y];</span><br><span class="line">dict[y] = temp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; sum; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">putchar</span>(dict[i].ch);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">free</span>(num);</span><br><span class="line"><span class="built_in">free</span>(dict);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> * <span class="title">equip</span><span class="params">(<span class="keyword">int</span> sum, <span class="keyword">int</span> key)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i,direction;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> width, high, x, y;</span><br><span class="line">high = key;</span><br><span class="line">width = sum;</span><br><span class="line"><span class="keyword">int</span> * num = (<span class="keyword">int</span> *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">int</span>) * sum);</span><br><span class="line"><span class="keyword">int</span> * table = (<span class="keyword">int</span>*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">int</span>) * high * width);<span class="comment">//WWW画板</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; high * width; i++)<span class="comment">//将画板全部清空为-1</span></span><br><span class="line">&#123;</span><br><span class="line">table[i] = <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">x = y = <span class="number">0</span>;</span><br><span class="line">direction = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> (x &lt; sum)<span class="comment">//开始绘画WWWW</span></span><br><span class="line">&#123;</span><br><span class="line">table[y * width + x] = x;</span><br><span class="line">x++;</span><br><span class="line">y += direction;</span><br><span class="line"><span class="keyword">if</span> (y % (key - <span class="number">1</span>) == <span class="number">0</span>)</span><br><span class="line">direction *= (<span class="number">-1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (y = <span class="number">0</span>, i = <span class="number">0</span>; y &lt; high; y++)<span class="comment">//将WWW的&quot;像素点&quot;一样一行地检测并放在num中</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (x = <span class="number">0</span>; x &lt; width; x++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (table[y * width + x] != <span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line">num[i++] = table[y * width + x];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">free</span>(table);</span><br><span class="line"><span class="keyword">return</span> num;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行得到flag，其密钥为5</p><h3 id="第六题：不仅仅是Morse"><a href="#第六题：不仅仅是Morse" class="headerlink" title="第六题：不仅仅是Morse"></a>第六题：不仅仅是Morse</h3><p>直接上mouse工具，<a href="https://www.qtool.net/morsecode">https://www.qtool.net/morsecode</a><br><img src="https://note.youdao.com/yws/public/resource/7ef66b8168e74b97ee5e6f9defe01525/xmlnote/ED21CC0371FD4BA69D16AD39BA1BCC47/160"><br>emmmmmm,这abababab的也不可能是flag<br>反手百度，哦哦哦，培根密码<br>带入培根密码工具，直接解决</p><h4 id="方法二-3"><a href="#方法二-3" class="headerlink" title="方法二"></a>方法二</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">charbin_dec</span><span class="params">(<span class="keyword">char</span> * num,<span class="keyword">int</span> many)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">stage</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> ch[] = <span class="string">&quot;AAAAABAABBBAABBAAAAAAAABAABABAAAAAAABBABAAABBAAABBAABAAAABABAABAAABBABAAABAAABAABABBAABBBABAAABABABBAAABBABAAABAABAABAAAABBABBAABBAABAABAAABAABAABAABABAABBABAAAABBABAABBA&quot;</span>;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">while</span>(ch[i] != <span class="string">&#x27;\0&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(ch[i] == <span class="string">&#x27;A&#x27;</span>)</span><br><span class="line">ch[i] = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">ch[i] = <span class="string">&#x27;1&#x27;</span>;</span><br><span class="line">i++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; <span class="built_in">strlen</span>(ch);i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(i %<span class="number">5</span> == <span class="number">0</span>)</span><br><span class="line"><span class="built_in">putchar</span>(charbin_dec(ch + i,<span class="number">5</span>) + <span class="string">&#x27;A&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">charbin_dec</span><span class="params">(<span class="keyword">char</span> * num,<span class="keyword">int</span> many)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> sum = <span class="number">0</span>,i;</span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; many;i++)</span><br><span class="line">&#123;</span><br><span class="line">sum += ((num[i] - <span class="string">&#x27;0&#x27;</span>) * stage(<span class="number">2</span>,many - i - <span class="number">1</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">stage</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> sum = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(y &gt;= <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">sum *= x;</span><br><span class="line">y--;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编译运行，将输出转为小写，得到flag</p><h3 id="第七题：混合编码"><a href="#第七题：混合编码" class="headerlink" title="第七题：混合编码"></a>第七题：混合编码</h3><p>打开题目<br><img src="https://note.youdao.com/yws/public/resource/7ef66b8168e74b97ee5e6f9defe01525/xmlnote/C85FD68550D744A69EFC36CE40F75522/162"><br>重点是最后两个等号，可以直接确定是base64 加密了<br>带入工具<br><img src="https://note.youdao.com/yws/public/resource/7ef66b8168e74b97ee5e6f9defe01525/xmlnote/24EED1E8A02F4EACB2EA22EF26C9F6C0/164"><br>这就要靠经验了<br>像这种&amp;#的一般是unicode加密<br>去网上找工具<br><a href="https://tool.chinaz.com/tools/unicode.aspx">https://tool.chinaz.com/tools/unicode.aspx</a><br>解密得<br><img src="https://note.youdao.com/yws/public/resource/7ef66b8168e74b97ee5e6f9defe01525/xmlnote/76D4368EE5964CA69E0A7D064519EA7C/167"><br>欸，还没得出答案，看来还是要再次解密<br>没办法，尝试下其他的加密方式，凯撒不像、莫斯也不像、栅栏也不是、培根也不对、那么试试base64，正好就可以解密<br><img src="https://note.youdao.com/yws/public/resource/7ef66b8168e74b97ee5e6f9defe01525/xmlnote/A0521561B4DE494E990AFFB9129CB963/169"><br>emmmmm，用/分开，还是一个个的数字，那么就试试ASCII，用ASCII一一对应，就得出flag了。</p><h3 id="第八题：easy-RSA"><a href="#第八题：easy-RSA" class="headerlink" title="第八题：easy_RSA"></a>第八题：easy_RSA</h3><p>简单的rsa<br>带入RAS-Tool计算出d<br>解决</p><h3 id="第九题：easychallenge"><a href="#第九题：easychallenge" class="headerlink" title="第九题：easychallenge"></a>第九题：easychallenge</h3><p>下载附件，是一个.pyc文件，是python的运行时的临时文件，可进行反编译，经在线工具反编译后得到代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># visit http://tool.lu/pyc/ for more information</span></span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encode1</span>(<span class="params">ans</span>):</span></span><br><span class="line">    s = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> ans:</span><br><span class="line">        x = <span class="built_in">ord</span>(i) ^ <span class="number">36</span></span><br><span class="line">        x = x + <span class="number">25</span></span><br><span class="line">        s += <span class="built_in">chr</span>(x)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> s</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encode2</span>(<span class="params">ans</span>):</span></span><br><span class="line">    s = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> ans:</span><br><span class="line">        x = <span class="built_in">ord</span>(i) + <span class="number">36</span></span><br><span class="line">        x = x ^ <span class="number">36</span></span><br><span class="line">        s += <span class="built_in">chr</span>(x)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> s</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encode3</span>(<span class="params">ans</span>):</span></span><br><span class="line">    <span class="keyword">return</span> base64.b32encode(ans)</span><br><span class="line"></span><br><span class="line">flag = <span class="string">&#x27; &#x27;</span></span><br><span class="line"><span class="built_in">print</span> <span class="string">&#x27;Please Input your flag:&#x27;</span></span><br><span class="line">flag = raw_input()</span><br><span class="line">final = <span class="string">&#x27;UC7KOWVXWVNKNIC2XCXKHKK2W5NLBKNOUOSK3LNNVWW3E===&#x27;</span></span><br><span class="line"><span class="keyword">if</span> encode3(encode2(encode1(flag))) == final:</span><br><span class="line">    <span class="built_in">print</span> <span class="string">&#x27;correct&#x27;</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span> <span class="string">&#x27;wrong&#x27;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>讲密文以base32解码得到</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;0xA0,0xBE,0xA7,0x5A,0xB7,0xB5,0x5A,0xA6,0xA0,0x5A,0xB8,0xAE,0xA3,0xA9,0x5A,0xB7,0x5A,0xB0,0xA9,0xAE,0xA3,0xA4,0xAD,0xAD,0xAD,0xAD,0xAD,0xB2&#125;</span><br></pre></td></tr></table></figure><p>再编写程序</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">decode1</span><span class="params">(<span class="keyword">int</span> ans)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">decode2</span><span class="params">(<span class="keyword">int</span> ans)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> flag[<span class="number">28</span>] = &#123;<span class="number">0xA0</span>,<span class="number">0xBE</span>,<span class="number">0xA7</span>,<span class="number">0x5A</span>,<span class="number">0xB7</span>,<span class="number">0xB5</span>,<span class="number">0x5A</span>,<span class="number">0xA6</span>,<span class="number">0xA0</span>,<span class="number">0x5A</span>,<span class="number">0xB8</span>,<span class="number">0xAE</span>,<span class="number">0xA3</span>,<span class="number">0xA9</span>,<span class="number">0x5A</span>,<span class="number">0xB7</span>,<span class="number">0x5A</span>,<span class="number">0xB0</span>,<span class="number">0xA9</span>,<span class="number">0xAE</span>,<span class="number">0xA3</span>,<span class="number">0xA4</span>,<span class="number">0xAD</span>,<span class="number">0xAD</span>,<span class="number">0xAD</span>,<span class="number">0xAD</span>,<span class="number">0xAD</span>,<span class="number">0xB2</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; <span class="number">28</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> c = (decode1(decode2(flag[i])));</span><br><span class="line"><span class="built_in">putchar</span>(c);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">decode1</span><span class="params">(<span class="keyword">int</span> ans)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ans -= <span class="number">25</span>;</span><br><span class="line">ans ^= <span class="number">36</span>;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">decode2</span><span class="params">(<span class="keyword">int</span> ans)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ans ^= <span class="number">36</span>;</span><br><span class="line">ans -= <span class="number">36</span>;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行得到flag</p><h3 id="第十题：转轮机加密"><a href="#第十题：转轮机加密" class="headerlink" title="第十题：转轮机加密"></a>第十题：转轮机加密</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">1:  &lt; ZWAXJGDLUBVIQHKYPNTCRMOSFE &lt;</span><br><span class="line">2:  &lt; KPBELNACZDTRXMJQOYHGVSFUWI &lt;</span><br><span class="line">3:  &lt; BDMAIZVRNSJUWFHTEQGYXPLOCK &lt;</span><br><span class="line">4:  &lt; RPLNDVHGFCUKTEBSXQYIZMJWAO &lt;</span><br><span class="line">5:  &lt; IHFRLABEUOTSGJVDKCPMNZQWXY &lt;</span><br><span class="line">6:  &lt; AMKGHIWPNYCJBFZDRUSLOQXVET &lt;</span><br><span class="line">7:  &lt; GWTHSPYBXIZULVKMRAFDCEONJQ &lt;</span><br><span class="line">8:  &lt; NOZUTWDCVRJLXKISEFAPMYGHBQ &lt;</span><br><span class="line">9:  &lt; XPLTDSRFHENYVUBMCQWAOIKZGJ &lt;</span><br><span class="line">10: &lt; UDNAJFBOWTGVRSCZQKELMXYIHP &lt;</span><br><span class="line">11： &lt; MNBVCXZQWERTPOIUYALSKDJFHG &lt;</span><br><span class="line">12： &lt; LVNCMXZPQOWEIURYTASBKJDFHG &lt;</span><br><span class="line">13： &lt; JZQAWSXCDERFVBGTYHNUMKILOP &lt;</span><br><span class="line"></span><br><span class="line">密钥为：2,3,7,5,13,12,9,1,8,10,4,11,6</span><br><span class="line">密文为：NFQKSEVOQOFNP</span><br></pre></td></tr></table></figure><p>不认识啊，搜索托马斯·杰斐逊<br>美国人等等一系列的东西，结合我们的题目，轮转机，ok找到方向了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">加密表：</span><br><span class="line">1: &lt; ZWAXJGDLUBVIQHKYPNTCRMOSFE &lt; </span><br><span class="line">2: &lt; KPBELNACZDTRXMJQOYHGVSFUWI &lt;</span><br><span class="line">3: &lt; BDMAIZVRNSJUWFHTEQGYXPLOCK &lt; </span><br><span class="line">4: &lt; RPLNDVHGFCUKTEBSXQYIZMJWAO &lt; </span><br><span class="line">5: &lt; IHFRLABEUOTSGJVDKCPMNZQWXY &lt; </span><br><span class="line">6: &lt; AMKGHIWPNYCJBFZDRUSLOQXVET &lt; </span><br><span class="line">7: &lt; GWTHSPYBXIZULVKMRAFDCEONJQ &lt; </span><br><span class="line">8: &lt; NOZUTWDCVRJLXKISEFAPMYGHBQ &lt; </span><br><span class="line">9: &lt; XPLTDSRFHENYVUBMCQWAOIKZGJ &lt; </span><br><span class="line">10:&lt; UDNAJFBOWTGVRSCZQKELMXYIHP &lt; </span><br><span class="line">11:&lt; MNBVCXZQWERTPOIUYALSKDJFHG &lt; </span><br><span class="line">12:&lt; LVNCMXZPQOWEIURYTASBKJDFHG &lt; </span><br><span class="line">13:&lt; JZQAWSXCDERFVBGTYHNUMKILOP &lt; </span><br><span class="line">密钥为：2，3，7，5，13,12,9，1，8，10，4，11，6 </span><br><span class="line">密文为：NFQKSEVOQOFNP 起初在网上没有找到这种加密的具体原理，</span><br><span class="line">对源码以及最后的代码分析过后，发现这种古典密码其实很简单，下面我来</span><br><span class="line">阐释它的解密原理.首先托马斯-杰弗逊转轮加密由三串字符串组成，第一部</span><br><span class="line">分为加密表，第二部分为密钥，第三部分为密文 加密表就是我们需要利</span><br><span class="line">用密钥和密文来进行加密，具体的过程如下： 首先查看密钥第一个字符为2，</span><br><span class="line">因此我们需要到加密表中去查找第2行的数据</span><br><span class="line"> 2: &lt; KPBELNACZDTRXMJQOYHGVSFUWI &lt; </span><br><span class="line"> 这里我们再利用密文的第一个字符N进行旋转，N在这里的作用就是</span><br><span class="line"> 旋转过后的第一个字符即为N，在这里的旋转为循环不为补0 </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>其实很简单，根据密钥找到对应的行数，然后再根据密文找到这一行的字母，将它移到最前面，后面的字母跟上，再重新排列就行了。<br>那么这道题就很简单了，一步步的慢慢解就行。</p><h4 id="方法二-4"><a href="#方法二-4" class="headerlink" title="方法二"></a>方法二</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">spin</span><span class="params">(<span class="keyword">char</span> * base,<span class="keyword">int</span> n,<span class="keyword">int</span> ch)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> ans[<span class="number">13</span>][<span class="number">27</span>] = </span><br><span class="line">&#123;</span><br><span class="line"><span class="string">&quot;ZWAXJGDLUBVIQHKYPNTCRMOSFE&quot;</span>,</span><br><span class="line"><span class="string">&quot;KPBELNACZDTRXMJQOYHGVSFUWI&quot;</span>,</span><br><span class="line"><span class="string">&quot;BDMAIZVRNSJUWFHTEQGYXPLOCK&quot;</span>,</span><br><span class="line"><span class="string">&quot;RPLNDVHGFCUKTEBSXQYIZMJWAO&quot;</span>,</span><br><span class="line"><span class="string">&quot;IHFRLABEUOTSGJVDKCPMNZQWXY&quot;</span>,</span><br><span class="line"><span class="string">&quot;AMKGHIWPNYCJBFZDRUSLOQXVET&quot;</span>,</span><br><span class="line"><span class="string">&quot;GWTHSPYBXIZULVKMRAFDCEONJQ&quot;</span>,</span><br><span class="line"><span class="string">&quot;NOZUTWDCVRJLXKISEFAPMYGHBQ&quot;</span>,</span><br><span class="line"><span class="string">&quot;XPLTDSRFHENYVUBMCQWAOIKZGJ&quot;</span>,</span><br><span class="line"><span class="string">&quot;UDNAJFBOWTGVRSCZQKELMXYIHP&quot;</span>,</span><br><span class="line"><span class="string">&quot;MNBVCXZQWERTPOIUYALSKDJFHG&quot;</span>,</span><br><span class="line"><span class="string">&quot;LVNCMXZPQOWEIURYTASBKJDFHG&quot;</span>,</span><br><span class="line"><span class="string">&quot;JZQAWSXCDERFVBGTYHNUMKILOP&quot;</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">char</span> er[<span class="number">14</span>] = <span class="string">&quot;NFQKSEVOQOFNP&quot;</span>;</span><br><span class="line"><span class="keyword">int</span> linenum[<span class="number">13</span>] = &#123;<span class="number">2</span>,<span class="number">3</span>,<span class="number">7</span>,<span class="number">5</span>,<span class="number">13</span>,<span class="number">12</span>,<span class="number">9</span>,<span class="number">1</span>,<span class="number">8</span>,<span class="number">10</span>,<span class="number">4</span>,<span class="number">11</span>,<span class="number">6</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> i,x,y;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; <span class="number">13</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">spin(ans[linenum[i] - <span class="number">1</span>],<span class="number">26</span>,er[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(x = <span class="number">0</span>;x &lt; <span class="number">26</span>;x++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(y = <span class="number">0</span>;y &lt; <span class="number">13</span>;y++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">putchar</span>(ans[linenum[y] - <span class="number">1</span>][x]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">putchar</span>(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">spin</span><span class="params">(<span class="keyword">char</span> * base,<span class="keyword">int</span> n,<span class="keyword">int</span> ch)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">此函数用于字符串旋转，将base[n]旋转到以ch开头</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">int</span> feet = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">char</span> * temp = <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">while</span>(base[feet] != ch &amp;&amp; feet &lt; n)</span><br><span class="line">feet++; <span class="comment">//用于进算从开始到目标字符 转了多少个字符</span></span><br><span class="line">temp = (<span class="keyword">char</span> *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">char</span>) * n);</span><br><span class="line"><span class="built_in">strncpy</span>(temp,base + feet,(n - feet));</span><br><span class="line"><span class="built_in">strncpy</span>(temp + (n - feet),base,feet);</span><br><span class="line"><span class="built_in">strncpy</span>(base,temp,n);</span><br><span class="line"><span class="built_in">free</span>(temp);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最终在结果中找到有意义的字符串，即flag</p><h3 id="第十一题：Normal-RSA"><a href="#第十一题：Normal-RSA" class="headerlink" title="第十一题：Normal_RSA"></a>第十一题：Normal_RSA</h3><p>这道题，大部分都是用工具写，欸，但我不用，就是玩儿<br>下载附件，两个文件，一个打开是乱码，另一个打开了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-----BEGIN PUBLIC KEY-----</span><br><span class="line">MDwwDQYJKoZIhvcNAQEBBQADKwAwKAIhAMJjauXD2OQ&#x2F;+5erCQKPGqxsC&#x2F;bNPXDr</span><br><span class="line">yigb&#x2F;+l&#x2F;vjDdAgMBAAE&#x3D;</span><br><span class="line">-----END PUBLIC KEY-----</span><br></pre></td></tr></table></figure><p>啊，很简单的公钥解析，我直接放在在线网站上搞<br><img src="https://note.youdao.com/yws/public/resource/7ef66b8168e74b97ee5e6f9defe01525/xmlnote/B1F962D54D1C4A5CB583A06309DABF50/171"><br>e和n不就出来了呗<br>我直接<a href="http://www.factordb.com/">分解质因数</a><br>得出来p跟q<br>上python 用p和q写出n的欧拉函数<br>再用<a href="https://blog.csdn.net/TH_NUM/article/details/51477719">gmpy2</a>求出逆元d<br>现在有了n、e、d 还要密文c 那这个密文c就应该在另一个文件里了，但打开是乱码，怎么办呢，欸，公式一般都是数字，密文改成数字怎么样，用十六进制打开文件，ok，得到了密文的十六进制的形式，我们继续用pow函数解出明文（什么是<a href="https://www.runoob.com/python/func-number-pow.html">pow?</a>)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"> c &#x3D; 0x6d3eb7df23eee1d38710beba78a0878e0e9c65bd3d08496dda64924199110c79</span><br><span class="line"> n &#x3D; 87924348264132406875276140514499937145050893665602592992418171647042491658461</span><br><span class="line"> d &#x3D; 10866948760844599168252082612378495977388271279679231539839049698621994994673</span><br><span class="line"> m&#x3D;pow(c,d,n)</span><br><span class="line"> m</span><br><span class="line">4865677769286717240419296208145914517832094464845949055035370987525602570</span><br></pre></td></tr></table></figure><p>再讲m转为16进制</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hex(m)</span><br><span class="line">&#39;0x2c0fe04e3260e5b8700504354467b323536625f69355f6d336469756d7d0a&#39;</span><br></pre></td></tr></table></figure><p>明文有了，放在16进制转文本的<a href="https://www.sojson.com/hexadecimal.html">在线网站</a>里<br>欸答案出不来，方法不可能是错的，明文也不可能是错的，那么就是16进制的问题了<br>用函数检查字符个数，发现长度为61个（63-2）而16进制字符的个数一定是偶数，因为16进制的字符应该是由两个 0~f 的数组成的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"> len(hex(m))</span><br><span class="line">63</span><br></pre></td></tr></table></figure><p>于是删掉第一个字符<br>ok解决</p><h4 id="方法二-5"><a href="#方法二-5" class="headerlink" title="方法二"></a>方法二</h4><p>你们最爱的工具解密<br>里面的工具自己百度安装</p><p>下载附件，得到一个flag.enc和一个pubkey.pem</p><p>使用OpenSSL打开pubkey.pem</p><p><img src="/wldkpd/wldkpd.github/image-20210223202038757.png" alt="image-20210223202038757"></p><p>我们找到两个大素数的乘积M为:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C2636AE5C3D8E43FFB97AB09028F1AAC6C0BF6CD3D70EBCA281BFFE97FBE30DD</span><br></pre></td></tr></table></figure><p>将其转化为十进制为:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">87924348264132406875276140514499937145050893665602592992418171647042491658461</span><br></pre></td></tr></table></figure><p>经</p><p>得到两个大质数:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">275127860351348928173285174381581152299</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">319576316814478949870590164193048041239</span><br></pre></td></tr></table></figure><p>使用rsatool.py生成私钥文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python rsatool.py -f PEM -o private.pem -p 275127860351348928173285174381581152299 -q 319576316814478949870590164193048041239 -e 65537</span><br></pre></td></tr></table></figure><p>将pubkey.pem、flag.enc、private.pem放在同一个文件夹下，进行解密</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rsautl -decrypt -in flag.enc -inkey private.pem -out flag.txt</span><br></pre></td></tr></table></figure><p>打开flag.txt得到flag</p><h3 id="第十二题：easy-ECC"><a href="#第十二题：easy-ECC" class="headerlink" title="第十二题：easy_ECC"></a>第十二题：easy_ECC</h3><p>下载附件，得到信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">已知椭圆曲线加密Ep(a,b)参数为</span><br><span class="line"></span><br><span class="line">p &#x3D; 15424654874903</span><br><span class="line"></span><br><span class="line">a &#x3D; 16546484</span><br><span class="line"></span><br><span class="line">b &#x3D; 4548674875</span><br><span class="line"></span><br><span class="line">G(6478678675,5636379357093)</span><br><span class="line"></span><br><span class="line">私钥为</span><br><span class="line"></span><br><span class="line">k &#x3D; 546768</span><br><span class="line"></span><br><span class="line">求公钥K(x,y)</span><br></pre></td></tr></table></figure><p>使用ECC工具进行解题</p><p><img src="/wldkpd/wldkpd.github/image-20210224095244601.png" alt="image-20210224095244601"></p><p>将Rx+Ry作为flag</p>]]></content>
      
      
      
        <tags>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="2021/01/11/hello-world/"/>
      <url>2021/01/11/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
